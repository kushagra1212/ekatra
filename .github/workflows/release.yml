# This workflow handles testing, building, packaging, and releasing the application.
name: Test and Create Release

# This workflow now triggers when a tag like v1.0.0 is pushed.
on:
    push:
        tags:
            - "v*.*.*"
    workflow_dispatch:

jobs:
    build_and_test:
        name: Build and Test on ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            # Install Ninja and 7-Zip on Windows for packaging
            - name: Install Build Tools (Windows)
              if: runner.os == 'Windows'
              run: choco install ninja 7zip

            - name: Configure CMake
              run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

            - name: Build
              run: cmake --build build --config Release

            # Run tests after a successful build. If this step fails, the job fails.
            - name: Run Tests
              working-directory: ./build
              run: ctest --output-on-failure

            - name: Package for Linux/macOS
              if: runner.os != 'Windows'
              run: |
                  mkdir staging
                  cp build/ekatra staging/
                  cp LICENSE staging/
                  cp README.md staging/
                  tar -czvf ekatra-${{ runner.os }}.tar.gz -C staging .

            - name: Package for Windows
              if: runner.os == 'Windows'
              shell: pwsh
              run: |
                  mkdir staging
                  Copy-Item build/ekatra.exe -Destination staging/
                  Copy-Item LICENSE -Destination staging/
                  Copy-Item README.md -Destination staging/
                  & 'C:\Program Files\7-Zip\7z.exe' a ekatra-windows-latest.zip ".\staging\*"

            # Upload the final archive as a build artifact
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: release-artifacts-${{ runner.os }}
                  path: |
                      ekatra-*.tar.gz
                      ekatra-*.zip
                  if-no-files-found: "ignore"

    create-release:
        name: Create GitHub Release
        needs: build_and_test
        runs-on: ubuntu-latest
        permissions:
            contents: write # Permission is required to create a release

        steps:
            - name: Download all build artifacts
              uses: actions/download-artifact@v4
              with:
                  pattern: release-artifacts-*
                  path: artifacts
                  merge-multiple: true

            - name: Create Release and Upload Assets
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ github.ref_name }}
                  name: "Ekatra ${{ github.ref_name }}"
                  generate_release_notes: true
                  body: |
                      Automated release for version ${{ github.ref_name }}.
                      Assets are compiled for macOS, Windows, and Linux.
                  # Uploads all the downloaded archives to the release
                  files: artifacts/*
